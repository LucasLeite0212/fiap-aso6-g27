kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/vcs-ref: ''
    app.openshift.io/vcs-uri: 'https://github.com/openshift-instruqt/blog-django-py'
    deployment.kubernetes.io/revision: '4'
  name: blog-django-py
  namespace: fiap
  labels:
    app: blog-django-py
    app.kubernetes.io/component: blog-django-py
    app.kubernetes.io/instance: blog-django-py
    app.kubernetes.io/name: python
    app.kubernetes.io/part-of: blog-django-py-app
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: 3.8-ubi7
spec:
  replicas: 1
  selector:
    matchLabels:
      app: blog-django-py
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: blog-django-py
        deploymentconfig: blog-django-py
    spec:
      containers:
        - name: blog-django-py
          image: >-
            image-registry.openshift-image-registry.svc:5000/fiap-aso6-g27/blog-django-py@sha256:f15ec0bc4dbc0186250f26dcf92153da2834ea19023a76042e978c6d12ae7e1f
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: BLOG_BANNER_COLOR
              value: blue
            - name: DATABASE_URL
              value: 'postgresql://sampledb:sampledb@sample-database:5432/sampledb'
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600