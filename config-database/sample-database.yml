kind: Pod
apiVersion: v1
metadata:
  generateName: sample-database-1-
  annotations:
    k8s.v1.cni.cncf.io/network-status: |-
      [{
          "name": "",
          "interface": "eth0",
          "ips": [
              "10.129.5.63"
          ],
          "default": true,
          "dns": {}
      }]
    k8s.v1.cni.cncf.io/networks-status: |-
      [{
          "name": "",
          "interface": "eth0",
          "ips": [
              "10.129.5.63"
          ],
          "default": true,
          "dns": {}
      }]
    kubernetes.io/limit-ranger: >-
      LimitRanger plugin set: cpu request for container postgresql; cpu limit
      for container postgresql
    openshift.io/deployment-config.latest-version: '1'
    openshift.io/deployment-config.name: sample-database
    openshift.io/deployment.name: sample-database-1
    openshift.io/generated-by: OpenShiftNewApp
    openshift.io/scc: restricted
  selfLink: /api/v1/namespaces/fiap-aso6-g27/pods/sample-database-1-ds4d4
  resourceVersion: '13293772'
  name: sample-database-1-ds4d4
  uid: 775ab705-7ed9-4539-b1a8-d5ca9371775c
  creationTimestamp: '2022-01-05T22:52:24Z'
  managedFields:
    - manager: kube-controller-manager
      operation: Update
      apiVersion: v1
      time: '2022-01-05T22:52:24Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:openshift.io/deployment-config.latest-version': {}
            'f:openshift.io/deployment-config.name': {}
            'f:openshift.io/deployment.name': {}
            'f:openshift.io/generated-by': {}
          'f:generateName': {}
          'f:labels':
            .: {}
            'f:deployment': {}
            'f:deploymentconfig': {}
            'f:name': {}
          'f:ownerReferences':
            .: {}
            'k:{"uid":"c9b04a65-8d03-4440-bd8f-15ced02ac3e2"}':
              .: {}
              'f:apiVersion': {}
              'f:blockOwnerDeletion': {}
              'f:controller': {}
              'f:kind': {}
              'f:name': {}
              'f:uid': {}
        'f:spec':
          'f:containers':
            'k:{"name":"postgresql"}':
              'f:image': {}
              'f:volumeMounts':
                .: {}
                'k:{"mountPath":"/var/lib/pgsql/data"}':
                  .: {}
                  'f:mountPath': {}
                  'f:name': {}
              'f:terminationMessagePolicy': {}
              .: {}
              'f:resources':
                .: {}
                'f:limits':
                  .: {}
                  'f:memory': {}
                'f:requests':
                  .: {}
                  'f:memory': {}
              'f:livenessProbe':
                .: {}
                'f:exec':
                  .: {}
                  'f:command': {}
                'f:failureThreshold': {}
                'f:initialDelaySeconds': {}
                'f:periodSeconds': {}
                'f:successThreshold': {}
                'f:timeoutSeconds': {}
              'f:env':
                .: {}
                'k:{"name":"POSTGRESQL_DATABASE"}':
                  .: {}
                  'f:name': {}
                  'f:valueFrom':
                    .: {}
                    'f:secretKeyRef':
                      .: {}
                      'f:key': {}
                      'f:name': {}
                'k:{"name":"POSTGRESQL_PASSWORD"}':
                  .: {}
                  'f:name': {}
                  'f:valueFrom':
                    .: {}
                    'f:secretKeyRef':
                      .: {}
                      'f:key': {}
                      'f:name': {}
                'k:{"name":"POSTGRESQL_USER"}':
                  .: {}
                  'f:name': {}
                  'f:valueFrom':
                    .: {}
                    'f:secretKeyRef':
                      .: {}
                      'f:key': {}
                      'f:name': {}
              'f:readinessProbe':
                .: {}
                'f:exec':
                  .: {}
                  'f:command': {}
                'f:failureThreshold': {}
                'f:initialDelaySeconds': {}
                'f:periodSeconds': {}
                'f:successThreshold': {}
                'f:timeoutSeconds': {}
              'f:securityContext':
                .: {}
                'f:capabilities': {}
                'f:privileged': {}
              'f:terminationMessagePath': {}
              'f:imagePullPolicy': {}
              'f:ports':
                .: {}
                'k:{"containerPort":5432,"protocol":"TCP"}':
                  .: {}
                  'f:containerPort': {}
                  'f:protocol': {}
              'f:name': {}
          'f:dnsPolicy': {}
          'f:enableServiceLinks': {}
          'f:restartPolicy': {}
          'f:schedulerName': {}
          'f:securityContext': {}
          'f:terminationGracePeriodSeconds': {}
          'f:volumes':
            .: {}
            'k:{"name":"sample-database-data"}':
              .: {}
              'f:name': {}
              'f:persistentVolumeClaim':
                .: {}
                'f:claimName': {}
    - manager: multus
      operation: Update
      apiVersion: v1
      time: '2022-01-05T22:52:33Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:k8s.v1.cni.cncf.io/network-status': {}
            'f:k8s.v1.cni.cncf.io/networks-status': {}
    - manager: kubelet
      operation: Update
      apiVersion: v1
      time: '2022-01-05T22:52:38Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:status':
          'f:conditions':
            'k:{"type":"ContainersReady"}':
              .: {}
              'f:lastProbeTime': {}
              'f:lastTransitionTime': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Initialized"}':
              .: {}
              'f:lastProbeTime': {}
              'f:lastTransitionTime': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Ready"}':
              .: {}
              'f:lastProbeTime': {}
              'f:lastTransitionTime': {}
              'f:status': {}
              'f:type': {}
          'f:containerStatuses': {}
          'f:hostIP': {}
          'f:phase': {}
          'f:podIP': {}
          'f:podIPs':
            .: {}
            'k:{"ip":"10.129.5.63"}':
              .: {}
              'f:ip': {}
          'f:startTime': {}
  namespace: fiap-aso6-g27
  ownerReferences:
    - apiVersion: v1
      kind: ReplicationController
      name: sample-database-1
      uid: c9b04a65-8d03-4440-bd8f-15ced02ac3e2
      controller: true
      blockOwnerDeletion: true
  labels:
    deployment: sample-database-1
    deploymentconfig: sample-database
    name: sample-database
spec:
  restartPolicy: Always
  serviceAccountName: default
  imagePullSecrets:
    - name: default-dockercfg-wvttx
  priority: 0
  schedulerName: default-scheduler
  enableServiceLinks: true
  terminationGracePeriodSeconds: 30
  preemptionPolicy: PreemptLowerPriority
  nodeName: na46-bjfsg-worker-0-25g6d
  securityContext:
    seLinuxOptions:
      level: 's0:c68,c62'
    fsGroup: 1004680000
  containers:
    - resources:
        limits:
          cpu: 1500m
          memory: 512Mi
        requests:
          cpu: 5m
          memory: 512Mi
      readinessProbe:
        exec:
          command:
            - /usr/libexec/check-container
        initialDelaySeconds: 5
        timeoutSeconds: 1
        periodSeconds: 10
        successThreshold: 1
        failureThreshold: 3
      terminationMessagePath: /dev/termination-log
      name: postgresql
      livenessProbe:
        exec:
          command:
            - /usr/libexec/check-container
            - '--live'
        initialDelaySeconds: 120
        timeoutSeconds: 10
        periodSeconds: 10
        successThreshold: 1
        failureThreshold: 3
      env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              name: sample-database
              key: database-user
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sample-database
              key: database-password
        - name: POSTGRESQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: sample-database
              key: database-name
      securityContext:
        capabilities:
          drop:
            - KILL
            - MKNOD
            - SETGID
            - SETUID
        privileged: false
        runAsUser: 1004680000
      ports:
        - containerPort: 5432
          protocol: TCP
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - name: sample-database-data
          mountPath: /var/lib/pgsql/data
        - name: default-token-ttlhw
          readOnly: true
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      terminationMessagePolicy: File
      image: >-
        image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:c58b255376a4c1f6744b56389f0984f465b74e9c6a62626894f850ab74dec0ea
  serviceAccount: default
  volumes:
    - name: sample-database-data
      persistentVolumeClaim:
        claimName: sample-database
    - name: default-token-ttlhw
      secret:
        secretName: default-token-ttlhw
        defaultMode: 420
  dnsPolicy: ClusterFirst
  tolerations:
    - key: node.kubernetes.io/not-ready
      operator: Exists
      effect: NoExecute
      tolerationSeconds: 300
    - key: node.kubernetes.io/unreachable
      operator: Exists
      effect: NoExecute
      tolerationSeconds: 300
    - key: node.kubernetes.io/memory-pressure
      operator: Exists
      effect: NoSchedule
status:
  phase: Running
  conditions:
    - type: Initialized
      status: 'True'
      lastProbeTime: null
      lastTransitionTime: '2022-01-05T22:52:25Z'
    - type: Ready
      status: 'True'
      lastProbeTime: null
      lastTransitionTime: '2022-01-05T22:52:38Z'
    - type: ContainersReady
      status: 'True'
      lastProbeTime: null
      lastTransitionTime: '2022-01-05T22:52:38Z'
    - type: PodScheduled
      status: 'True'
      lastProbeTime: null
      lastTransitionTime: '2022-01-05T22:52:25Z'
  hostIP: 10.0.3.2
  podIP: 10.129.5.63
  podIPs:
    - ip: 10.129.5.63
  startTime: '2022-01-05T22:52:25Z'
  containerStatuses:
    - restartCount: 0
      started: true
      ready: true
      name: postgresql
      state:
        running:
          startedAt: '2022-01-05T22:52:33Z'
      imageID: >-
        image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:c58b255376a4c1f6744b56389f0984f465b74e9c6a62626894f850ab74dec0ea
      image: >-
        image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:c58b255376a4c1f6744b56389f0984f465b74e9c6a62626894f850ab74dec0ea
      lastState: {}
      containerID: 'cri-o://57228e25311b5ce822b814f1d8dcb3de9ffc07d7cafa53f4c74516ac9c5def57'
  qosClass: Burstable
